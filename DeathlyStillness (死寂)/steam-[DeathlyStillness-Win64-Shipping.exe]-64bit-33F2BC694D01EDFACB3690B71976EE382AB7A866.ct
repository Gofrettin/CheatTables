<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>31</ID>
      <Description>"#1 弹药无限 (射击一次后生效)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
assert(DeathlyStillness-Win64-Shipping.exe+29BF2E2,89 06 48 8B 74 24 48)
alloc(cheat1_code,256,DeathlyStillness-Win64-Shipping.exe)
registersymbol(cheat1_code)
label(return)
label(check_settings)
label(process_address)
label(default)
label(magize)
label(ammo)
label(condition1)
label(condition2)
label(condition3)
label(cheat1_setting1)
label(cheat1_setting2)
registersymbol(cheat1_setting1)
registersymbol(cheat1_setting2)

DeathlyStillness-Win64-Shipping.exe+29BF2E2:
  jmp cheat1_code
  nop 2
return:

cheat1_code:
  pushfq
check_settings:
  cmp byte ptr [cheat1_setting1],01
  je magize
  cmp byte ptr [cheat1_setting2],01
//  je ammo
//  jmp process_address
  jne process_address
magize:
  cmp rsi,[condition2]
  jne process_address
  popfq
  mov [rsi],1F
  mov rsi,[rsp+48]
  jmp return
ammo:
  cmp rsi,[condition3]
  jne process_address
  popfq
  mov [rsi],258
  mov rsi,[rsp+48]
  jmp return
process_address:
  push rax
  mov rax,[condition1]
  cmp rax,[rbp-48]
  pop rax
  jne default
  push rax
  mov rax,rsi
  mov [condition2],rax
  sub rax,1DC
  mov [condition3],rax
  pop rax
default:
  popfq
  mov [rsi],eax
  mov rsi,[rsp+48]
  jmp return
condition1:
  DB B1 70 47 CB F6 7F 00 00
//弹匣地址
condition2:
  DB 00 00 00 00 00 00 00 00
//备弹地址
condition3:
  DB 00 00 00 00 00 00 00 00
cheat1_setting1:
  DB 00
cheat1_setting2:
  DB 00

[DISABLE]
DeathlyStillness-Win64-Shipping.exe+29BF2E2:
  DB 89 06 48 8B 74 24 48

dealloc(*)
unregistersymbol(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"弹匣处理方式"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:默认
01:锁 31
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_setting1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"备弹处理方式"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:默认
01:锁 600
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_setting2</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"#2 生命值无限 (向前步行后生效)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// 用组合搜索 4:1084227584(5F) 4:1126825984(170F) 可快速定位生命值的地址
// 用唯一搜索结果的地址 +6F0 即可

{$STRICT}
[ENABLE]
assert(DeathlyStillness-Win64-Shipping.exe+29AD9E3,F3 0F 58 4C 24 40 F3 0F 11 0F)
alloc(cheat2_code,64,DeathlyStillness-Win64-Shipping.exe)
registersymbol(cheat2_code)
label(return)
label(process_address)
label(default)
label(health)
label(cheat2_store1)
label(cheat2_store2)
label(cheat2_store3)
label(cheat2_store4)
label(cheat2_store5)
registersymbol(cheat2_store5)
label(cheat2_store6)

DeathlyStillness-Win64-Shipping.exe+29AD9E3:
  jmp cheat2_code
  nop 5
return:

cheat2_code:
  pushfq
health:
  cmp rdi,[cheat2_store5]
  jne process_address
  popfq
  movss xmm1,[cheat2_store6]
  movss [rdi],xmm1
  jmp return
process_address:
  push rax
  mov rax,[rbp-40]
  cmp rax,[cheat2_store1]
  pop rax
  jne default
  push rax
  mov rax,[rbp-18]
  cmp rax,[cheat2_store2]
  pop rax
  jne default
  push rax
  mov rax,[rbp-08]
  cmp rax,[cheat2_store2]
  pop rax
  jne default
  push rax
  mov rax,[rbp-10]
  cmp eax,[cheat2_store3]
  pop rax
  jne default
  push rax
  mov rax,[rbp+08]
  cmp rax,[cheat2_store4]
  pop rax
  jne default
  push rax
  mov rax,rdi
  add rax,6A0
  mov [cheat2_store5],rax
  pop rax
default:
  popfq
  addss xmm1,[rsp+40]
  movss [rdi],xmm1
  jmp return
//rbp-40
cheat2_store1:
  DB C0 31 8D CE F6 7F 00 00
//rbp-18,rbp-08
cheat2_store2:
  DB 00 00 00 00 F6 7F 00 00
//rbp-10
cheat2_store3:
  DB 00 00 80 3F
//rbp+08
cheat2_store4:
  DB F9 13 DE CC F6 7F 00 00
//生命值地址
cheat2_store5:
  DB 00 00 00 00 00 00 00 00
//待写入的生命值
cheat2_store6:
  DB 00 00 C8 42
 
[DISABLE]
DeathlyStillness-Win64-Shipping.exe+29AD9E3:
  DB F3 0F 58 4C 24 40 F3 0F 11 0F
unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"生命值地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>8 Bytes</VariableType>
          <Address>cheat2_store5</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
